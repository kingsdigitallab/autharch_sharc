name: 'sharc_openstack'


services:

  # Required - Nginx Ingress
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./production/nginx-proxy/vhost.d:/etc/nginx/vhost.d:ro


  nginx:
    build:
      context: ..
      dockerfile: ./compose/production/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:Z
      - ../volumes/django/media:/usr/share/nginx/media:ro
      - ../volumes/vue/dist:/usr/share/nginx/vue:ro
      #- ../volumes/nginx/vue:/usr/share/nginx/vue:ro
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      #VIRTUAL_PATH: "~^/(assets/|media/|static/|redist/|robots.txt)"
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001


  django:
    build:
      context: ../
      dockerfile: ./compose/production/django/Dockerfile
    volumes:
      - ../volumes/django/static:/app/staticfiles:Z
      - ../volumes/django/media:/app/autharch_sharc/media:Z
    depends_on:
      - postgres
      - elasticsearch
    env_file:
      - .env
    command: /start
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "/api/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000


  postgres:
    image: postgres:12.3
    #    build:
    #      context: ../
    #      dockerfile: ./compose/production/postgres/Dockerfile
    restart: unless-stopped
    environment:
      #POSTGRES_USER: ${POSTGRES_USER}
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      timeout: 10s
      interval: 5s
      retries: 10
    volumes:
      - ../volumes/postgres_data:/var/lib/postgresql/data:Z
      - ../volumes/postgres_data_backups:/backups:z
    env_file:
      - .env
    expose:
      - "5432"


  elasticsearch:
    image: elasticsearch:7.10.1
    env_file:
      - .env
    volumes:
      - ../volumes/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped

  kdl-apache-proxy-exhibition:
   image: gitlab.kdl.kcl.ac.uk:5050/docker-images/core/kdl-apache-proxy
   container_name: kdl-apache-proxy-exhibition
   volumes:
     - ./production/apache/pathmap.yaml:/maps/pathmap.yaml:ro

   ports:
     - "8002:80"
   restart: unless-stopped
   environment:
     VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
     VIRTUAL_PATH: "~^/exhibition/"
     VIRTUAL_PROTO: http
     VIRTUAL_PORT: 8002


