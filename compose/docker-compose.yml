version: '3'

volumes:
  django_media: { }
  postgres_data: { }
  postgres_data_backups: { }
  traefik: { }
  elasticsearch_data: { }

services:

  # Required - Nginx Ingress
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - django_media:/usr/share/nginx/media:ro

  django:
    build:
      context: ../
      dockerfile: ./compose/production/django/Dockerfile
    image: autharch_sharc_liv_django
    volumes:
      - django_media:/app/autharch_sharc/media
    depends_on:
      - postgres
      - redis
      - elasticsearch
    env_file:
      - .env
    command: /start
    restart: unless-stopped
    expose:
      - "5000"
    environment:
      VIRTUAL_HOST: "sharc.kdl.kcl.ac.uk,localhost"
      LETSENCRYPT_HOST: "sharc.kdl.kcl.ac.uk,localhost"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 5000

  #  nginx:
  #    build:
  #      context: .
  #      dockerfile: ./compose/production/nginx/Dockerfile
  #    image: autharch_sharc_liv_nginx
  #    depends_on:
  #      - django
  #    volumes:
  #      - django_media:/usr/share/nginx/media:ro
  #    restart: unless-stopped

  postgres:
    build:
      context: ../
      dockerfile: ./compose/production/postgres/Dockerfile
    image: autharch_sharc_liv_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
      - postgres_data_backups:/backups:z
    env_file:
      - .env
    restart: unless-stopped

  #  traefik:
  #    build:
  #      context: .
  #      dockerfile: ./compose/liv/traefik/Dockerfile
  #    image: autharch_sharc_liv_traefik
  #    depends_on:
  #      - django
  #    volumes:
  #        - traefik:/etc/traefik/acme:z
  #    ports:
  #      - '127.0.0.1:8201:80'
  #    restart: unless-stopped

  redis:
    image: redis:5.0
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1 # Specify app required version
    container_name: elasticsearch_liv
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data:z
    expose:
      - "9200"
      - "9300"
    restart: unless-stopped


#  elasticsearch:
#    image: elasticsearch:7.10.1
#    container_name: elasticsearch_liv
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data:z
#    env_file:
#      - ./.envs/.liv/.elasticsearch
#    ports:
#      - '127.0.0.1:9200:9200'
#      - '127.0.0.1:9300:9300'
#    restart: unless-stopped

#  kibana:
#    image: kibana:7.5.1
#    depends_on:
#      - elasticsearch
#    env_file:
#      - ./.envs/.liv/.kibana
#    ports:
#      - '5601:5601'
#    restart: unless-stopped
